// <auto-generated />
using System;
using EFCORE_MYSQL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCORE_MYSQL.Migrations
{
    [DbContext(typeof(EFCoreDbContext))]
    [Migration("20250402030305_InitialCreate_01_04_25")]
    partial class InitialCreate_01_04_25
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("EFCORE_MYSQL.Models.Aluno", b =>
                {
                    b.Property<int>("Id_aluno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_aluno"));

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Curso")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("CursoId_curso")
                        .HasColumnType("int");

                    b.Property<string>("DataAtualizacao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DataBloqueio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DataCancelamento")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DataCriacao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DataDesbloqueio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DataDesuspensao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DataExclusao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DataExclusaoLogica")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DataMatricula")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DataNascimento")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DataReativacao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DataRecuperacao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DataRecuperacaoLogica")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DataSuspensao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DataTransferencia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UsuarioAtualizador")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UsuarioBloqueador")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UsuarioCancelador")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UsuarioCriador")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UsuarioDesbloqueador")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UsuarioDesuspensor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UsuarioExcluidor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UsuarioExcluidorLogico")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UsuarioReativador")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UsuarioRecuperador")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UsuarioRecuperadorLogico")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UsuarioSuspensor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id_aluno");

                    b.HasIndex("CursoId_curso");

                    b.ToTable("tb_aluno");
                });

            modelBuilder.Entity("EFCORE_MYSQL.Models.Curso", b =>
                {
                    b.Property<int>("Id_curso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_curso");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_curso"));

                    b.Property<int?>("CursoId_curso")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Data_Fim")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_fim");

                    b.Property<DateTime>("Data_Inicio")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_inicio");

                    b.Property<int>("Duracao")
                        .HasColumnType("int")
                        .HasColumnName("duracao");

                    b.Property<string>("Nome_Curso")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome_curso");

                    b.Property<bool>("Status_Curso")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status_curso");

                    b.HasKey("Id_curso");

                    b.HasIndex("CursoId_curso");

                    b.ToTable("tb_curso");
                });

            modelBuilder.Entity("EFCORE_MYSQL.Models.Disciplina", b =>
                {
                    b.Property<int>("Id_disciplina")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_disciplina");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_disciplina"));

                    b.Property<int>("Ano_Letivo")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("ano_letivo");

                    b.Property<int>("Carga_Horaria")
                        .HasMaxLength(3)
                        .HasColumnType("int")
                        .HasColumnName("carga_horaria");

                    b.Property<string>("Curso")
                        .HasColumnType("longtext");

                    b.Property<int?>("CursoId_curso")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data_Atualizacao")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_atualizacao");

                    b.Property<DateTime>("Data_Cadastro")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_cadastro");

                    b.Property<DateTime?>("Data_Cancelamento")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_cancelamento");

                    b.Property<string>("Motivo_Cancelamento")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("motivo_cancelamento");

                    b.Property<string>("Nome_Disciplina")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome_disciplina");

                    b.Property<string>("Professor")
                        .HasColumnType("longtext")
                        .HasColumnName("Professor");

                    b.Property<int>("Semestre")
                        .HasMaxLength(2)
                        .HasColumnType("int")
                        .HasColumnName("semestre");

                    b.Property<string>("Status_Cadastro")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("status_cadastro");

                    b.Property<string>("Status_Cancelamento")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("status_cancelamento");

                    b.Property<string>("Status_Disciplina")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("status_disciplina");

                    b.HasKey("Id_disciplina");

                    b.HasIndex("CursoId_curso");

                    b.ToTable("tb_disciplina");
                });

            modelBuilder.Entity("EFCORE_MYSQL.Models.Matricula", b =>
                {
                    b.Property<int>("Id_matricula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_matricula");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_matricula"));

                    b.Property<int>("Ano_Letivo")
                        .HasColumnType("int")
                        .HasColumnName("ano_letivo");

                    b.Property<int?>("CursoId_curso")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Data_Aprovacao")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_aprovacao");

                    b.Property<DateTime?>("Data_Cancelamento")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_cancelamento");

                    b.Property<DateTime?>("Data_Conclusao")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_conclusao");

                    b.Property<DateTime?>("Data_Exclusao")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_exclusao");

                    b.Property<DateTime>("Data_Matricula")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_matricula");

                    b.Property<DateTime?>("Data_Reprovacao")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_reprovacao");

                    b.Property<int>("Id_aluno")
                        .HasColumnType("int")
                        .HasColumnName("id_aluno");

                    b.Property<int>("Id_curso")
                        .HasColumnType("int")
                        .HasColumnName("id_curso");

                    b.Property<int>("Id_disciplina")
                        .HasColumnType("int")
                        .HasColumnName("id_disciplina");

                    b.Property<string>("Motivo_Cancelamento")
                        .HasColumnType("longtext")
                        .HasColumnName("motivo_cancelamento");

                    b.Property<string>("Nome_Disciplina")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nome_disciplina");

                    b.Property<int>("Semestre")
                        .HasColumnType("int")
                        .HasColumnName("semestre");

                    b.Property<bool>("Status_Aprovacao")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status_aprovacao");

                    b.Property<bool>("Status_Conclusao")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status_conclusao");

                    b.Property<bool>("Status_Matricula")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status_matricula");

                    b.Property<bool>("Status_Reprovacao")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status_reprovacao");

                    b.HasKey("Id_matricula");

                    b.HasIndex("CursoId_curso");

                    b.ToTable("tb_matricula");
                });

            modelBuilder.Entity("EFCORE_MYSQL.Models.Nota", b =>
                {
                    b.Property<int>("Id_nota")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_nota");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_nota"));

                    b.Property<int?>("CursoId_curso")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Data_aprovacao")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_aprovacao");

                    b.Property<DateTime>("Data_nota")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_nota");

                    b.Property<int>("Id_aluno")
                        .HasColumnType("int")
                        .HasColumnName("id_aluno");

                    b.Property<int>("Id_curso")
                        .HasColumnType("int")
                        .HasColumnName("id_curso");

                    b.Property<int>("Id_disciplina")
                        .HasColumnType("int")
                        .HasColumnName("Id_disciplina");

                    b.Property<int>("Id_matricula")
                        .HasColumnType("int")
                        .HasColumnName("Id_matricula");

                    b.Property<double>("Media")
                        .HasColumnType("double")
                        .HasColumnName("media");

                    b.Property<double>("Nota1")
                        .HasColumnType("double")
                        .HasColumnName("nota1");

                    b.Property<double>("Nota2")
                        .HasColumnType("double")
                        .HasColumnName("nota2");

                    b.Property<double>("Nota3")
                        .HasColumnType("double")
                        .HasColumnName("nota3");

                    b.Property<double>("Nota4")
                        .HasColumnType("double")
                        .HasColumnName("nota4");

                    b.Property<string>("Situacao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("situacao");

                    b.HasKey("Id_nota");

                    b.HasIndex("CursoId_curso");

                    b.ToTable("tb_nota");
                });

            modelBuilder.Entity("EFCORE_MYSQL.Models.Professor", b =>
                {
                    b.Property<int>("Id_professor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_professor");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_professor"));

                    b.Property<string>("Cpf_professor")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("cpf_professor");

                    b.Property<int?>("CursoId_curso")
                        .HasColumnType("int");

                    b.Property<string>("Data_nascimento")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("data_nascimento");

                    b.Property<string>("Email_professor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email_professor");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("endereco");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("telefone");

                    b.HasKey("Id_professor");

                    b.HasIndex("CursoId_curso");

                    b.ToTable("tb_professor");
                });

            modelBuilder.Entity("EFCORE_MYSQL.Models.Aluno", b =>
                {
                    b.HasOne("EFCORE_MYSQL.Models.Curso", null)
                        .WithMany("Alunos")
                        .HasForeignKey("CursoId_curso");
                });

            modelBuilder.Entity("EFCORE_MYSQL.Models.Curso", b =>
                {
                    b.HasOne("EFCORE_MYSQL.Models.Curso", null)
                        .WithMany("Cursos")
                        .HasForeignKey("CursoId_curso");
                });

            modelBuilder.Entity("EFCORE_MYSQL.Models.Disciplina", b =>
                {
                    b.HasOne("EFCORE_MYSQL.Models.Curso", null)
                        .WithMany("Disciplinas")
                        .HasForeignKey("CursoId_curso");
                });

            modelBuilder.Entity("EFCORE_MYSQL.Models.Matricula", b =>
                {
                    b.HasOne("EFCORE_MYSQL.Models.Curso", null)
                        .WithMany("Matriculas")
                        .HasForeignKey("CursoId_curso");
                });

            modelBuilder.Entity("EFCORE_MYSQL.Models.Nota", b =>
                {
                    b.HasOne("EFCORE_MYSQL.Models.Curso", null)
                        .WithMany("Notas")
                        .HasForeignKey("CursoId_curso");
                });

            modelBuilder.Entity("EFCORE_MYSQL.Models.Professor", b =>
                {
                    b.HasOne("EFCORE_MYSQL.Models.Curso", null)
                        .WithMany("Professores")
                        .HasForeignKey("CursoId_curso");
                });

            modelBuilder.Entity("EFCORE_MYSQL.Models.Curso", b =>
                {
                    b.Navigation("Alunos");

                    b.Navigation("Cursos");

                    b.Navigation("Disciplinas");

                    b.Navigation("Matriculas");

                    b.Navigation("Notas");

                    b.Navigation("Professores");
                });
#pragma warning restore 612, 618
        }
    }
}
